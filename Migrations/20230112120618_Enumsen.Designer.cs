// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoAPI;

#nullable disable

namespace ToDoAPI.Migrations
{
    [DbContext(typeof(ToDoListDBContext))]
    [Migration("20230112120618_Enumsen")]
    partial class Enumsen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ToDoAPI.Models.CreateToDoList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Expired")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ListTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ThisWeek")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("ToDoAPI.Models.CreateUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Access")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ToDoAPI.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("CreateToDoListId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreateToDoListId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("ToDoAPI.Models.CreateToDoList", b =>
                {
                    b.HasOne("ToDoAPI.Models.CreateUser", null)
                        .WithMany("ToDoList")
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoAPI.Models.Task", b =>
                {
                    b.HasOne("ToDoAPI.Models.CreateToDoList", null)
                        .WithMany("Task")
                        .HasForeignKey("CreateToDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoAPI.Models.CreateToDoList", b =>
                {
                    b.Navigation("Task");
                });

            modelBuilder.Entity("ToDoAPI.Models.CreateUser", b =>
                {
                    b.Navigation("ToDoList");
                });
#pragma warning restore 612, 618
        }
    }
}
